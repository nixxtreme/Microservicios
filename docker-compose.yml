services:

    db:
      image: postgres:16.1
      container_name: db-companies
      restart: always
      volumes:
        - ./sql/11create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
        - ./sql/11data.sql:/docker-entrypoint-initdb.d/data.sql
      environment:
        POSTGRES_DB: 'companies'
        POSTGRES_USER: 'debuggeandoideas'
        POSTGRES_PASSWORD: 'udemy'
      ports:
        - '5432:5432'

    # db-qa:
    #   image: postgres:16.1
    #   container_name: db-companies-qa
    #   restart: always
    #   volumes:
    #     - ./sql/11create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
    #     - ./sql/11data.sql:/docker-entrypoint-initdb.d/data.sql
    #   environment:
    #     POSTGRES_DB: 'companies-qa'
    #     POSTGRES_USER: 'debuggeandoideas-qa'
    #     POSTGRES_PASSWORD: 'udemy'
    #   ports:
    #     - '5234:5432'

    # db-prod:
    #   image: postgres:16.1
    #   container_name: db-companies-prod
    #   restart: always
    #   volumes:
    #     - ./sql/11create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
    #     - ./sql/11data.sql:/docker-entrypoint-initdb.d/data.sql
    #   environment:
    #     POSTGRES_DB: 'companies-prod'
    #     POSTGRES_USER: 'debuggeandoideas-prod'
    #     POSTGRES_PASSWORD: 'udemy'
    #   ports:
    #     - '5235:5432'

    zookeeper:
      image: confluentinc/cp-zookeeper:7.4.3
      container_name: load-balancer
      restart: always
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"

    kafka:
      image: confluentinc/cp-kafka:7.4.3
      container_name: msg-broker
      restart: always
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://msg-broker:9092,PLAINTEXT_INTERNAL://broker:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ports:
        - "9092:9092"

    mongo-db:
      image: mongo:7.0.5-rc0
      restart: always
      container_name: mongo-db
      hostname: mongodb
      environment:
        MONGO_INITDB_ROOT_USERNAME: sa
        MONGO_INITDB_ROOT_PASSWORD: sa
        MONGO_INITDB_DATABASE: reports
      ports:
        - "27017:27017"


